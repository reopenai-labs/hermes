// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/common/v1/captcha/captcha.proto

package captchaapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Payload       map[string]string      `protobuf:"bytes,2,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationRequest) Reset() {
	*x = ValidationRequest{}
	mi := &file_api_common_v1_captcha_captcha_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationRequest) ProtoMessage() {}

func (x *ValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_captcha_captcha_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationRequest.ProtoReflect.Descriptor instead.
func (*ValidationRequest) Descriptor() ([]byte, []int) {
	return file_api_common_v1_captcha_captcha_proto_rawDescGZIP(), []int{0}
}

func (x *ValidationRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ValidationRequest) GetPayload() map[string]string {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ValidationReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationReply) Reset() {
	*x = ValidationReply{}
	mi := &file_api_common_v1_captcha_captcha_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationReply) ProtoMessage() {}

func (x *ValidationReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_captcha_captcha_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationReply.ProtoReflect.Descriptor instead.
func (*ValidationReply) Descriptor() ([]byte, []int) {
	return file_api_common_v1_captcha_captcha_proto_rawDescGZIP(), []int{1}
}

func (x *ValidationReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ValidationReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_api_common_v1_captcha_captcha_proto protoreflect.FileDescriptor

const file_api_common_v1_captcha_captcha_proto_rawDesc = "" +
	"\n" +
	"#api/common/v1/captcha/captcha.proto\x12\n" +
	"captcha.v1\"\xaf\x01\n" +
	"\x11ValidationRequest\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12D\n" +
	"\apayload\x18\x02 \x03(\v2*.captcha.v1.ValidationRequest.PayloadEntryR\apayload\x1a:\n" +
	"\fPayloadEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"E\n" +
	"\x0fValidationReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2T\n" +
	"\n" +
	"Validation\x12F\n" +
	"\bValidate\x12\x1d.captcha.v1.ValidationRequest\x1a\x1b.captcha.v1.ValidationReplyB\x1fZ\x1dapps/common/facade/captchaapib\x06proto3"

var (
	file_api_common_v1_captcha_captcha_proto_rawDescOnce sync.Once
	file_api_common_v1_captcha_captcha_proto_rawDescData []byte
)

func file_api_common_v1_captcha_captcha_proto_rawDescGZIP() []byte {
	file_api_common_v1_captcha_captcha_proto_rawDescOnce.Do(func() {
		file_api_common_v1_captcha_captcha_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_common_v1_captcha_captcha_proto_rawDesc), len(file_api_common_v1_captcha_captcha_proto_rawDesc)))
	})
	return file_api_common_v1_captcha_captcha_proto_rawDescData
}

var file_api_common_v1_captcha_captcha_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_common_v1_captcha_captcha_proto_goTypes = []any{
	(*ValidationRequest)(nil), // 0: captcha.v1.ValidationRequest
	(*ValidationReply)(nil),   // 1: captcha.v1.ValidationReply
	nil,                       // 2: captcha.v1.ValidationRequest.PayloadEntry
}
var file_api_common_v1_captcha_captcha_proto_depIdxs = []int32{
	2, // 0: captcha.v1.ValidationRequest.payload:type_name -> captcha.v1.ValidationRequest.PayloadEntry
	0, // 1: captcha.v1.Validation.Validate:input_type -> captcha.v1.ValidationRequest
	1, // 2: captcha.v1.Validation.Validate:output_type -> captcha.v1.ValidationReply
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_common_v1_captcha_captcha_proto_init() }
func file_api_common_v1_captcha_captcha_proto_init() {
	if File_api_common_v1_captcha_captcha_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_common_v1_captcha_captcha_proto_rawDesc), len(file_api_common_v1_captcha_captcha_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_common_v1_captcha_captcha_proto_goTypes,
		DependencyIndexes: file_api_common_v1_captcha_captcha_proto_depIdxs,
		MessageInfos:      file_api_common_v1_captcha_captcha_proto_msgTypes,
	}.Build()
	File_api_common_v1_captcha_captcha_proto = out.File
	file_api_common_v1_captcha_captcha_proto_goTypes = nil
	file_api_common_v1_captcha_captcha_proto_depIdxs = nil
}
